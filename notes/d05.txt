

char	*ft_strcpy(char *dest, char *src)
{
	char *res = dest;
	while ((*dest++ = *src++) != '\0');
	return (res);
}

--> uses an infinite while loop where the operation of string value assignment happens before loop starts and catches empty string
--> as we iterate throught the array dest adress changes so we must store the address in res


signed int -> 32-bit int (2,147,483,647)

unsigned int -> 32-bit int (4,294,967,295)

conditionals dont use pointer


man ascii -> to see table

uses ascii decimal

printf( %d, ch) -> get ascii

-c - char
-d - int
-u -unsigned int
-s - string

need to store the address of the first value of the string if we want to return it


passing "string" directly -> this is constant and cannot replace chars

if ((str[i] >= 'a') && (str[i] <= 'z'))
    str[i] -= ('a' - 'A');

-> diff is 32 but neater to just compare chars






